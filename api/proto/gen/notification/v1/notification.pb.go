// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: notification/v1/notification.proto

package notificationv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 枚举渠道类型
type Channel int32

const (
	// 未指定渠道
	Channel_CHANNEL_UNSPECIFIED Channel = 0
	// 短信
	Channel_CHANNEL_SMS Channel = 1
	// 邮件
	Channel_CHANNEL_EMAIL Channel = 2
	// 站内信
	Channel_CHANNEL_IN_APP Channel = 3
	// 微信公众号
	Channel_CHANNEL_WECHAT_OFFICIAL Channel = 4
	// 微信服务号
	Channel_CHANNEL_WECHAT_SERVICE Channel = 5
	// 企业通信工具（如钉钉、飞书）
	Channel_CHANNEL_ENTERPRISE_IM Channel = 6
)

// Enum value maps for Channel.
var (
	Channel_name = map[int32]string{
		0: "CHANNEL_UNSPECIFIED",
		1: "CHANNEL_SMS",
		2: "CHANNEL_EMAIL",
		3: "CHANNEL_IN_APP",
		4: "CHANNEL_WECHAT_OFFICIAL",
		5: "CHANNEL_WECHAT_SERVICE",
		6: "CHANNEL_ENTERPRISE_IM",
	}
	Channel_value = map[string]int32{
		"CHANNEL_UNSPECIFIED":     0,
		"CHANNEL_SMS":             1,
		"CHANNEL_EMAIL":           2,
		"CHANNEL_IN_APP":          3,
		"CHANNEL_WECHAT_OFFICIAL": 4,
		"CHANNEL_WECHAT_SERVICE":  5,
		"CHANNEL_ENTERPRISE_IM":   6,
	}
)

func (x Channel) Enum() *Channel {
	p := new(Channel)
	*p = x
	return p
}

func (x Channel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Channel) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[0].Descriptor()
}

func (Channel) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[0]
}

func (x Channel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Channel.Descriptor instead.
func (Channel) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

// 通知发送状态枚举
type SendStatus int32

const (
	// 未指定通知发送状态
	SendStatus_SEND_STATUS_UNSPECIFIED SendStatus = 0
	// 待发送
	SendStatus_SEND_STATUS_PENDING SendStatus = 1
	// 发送成功
	SendStatus_SEND_STATUS_SUCCEEDED SendStatus = 2
	// 发送失败
	SendStatus_SEND_STATUS_FAILED SendStatus = 3
	// 发送已取消
	SendStatus_SEND_STATUS_CANCELED SendStatus = 4
)

// Enum value maps for SendStatus.
var (
	SendStatus_name = map[int32]string{
		0: "SEND_STATUS_UNSPECIFIED",
		1: "SEND_STATUS_PENDING",
		2: "SEND_STATUS_SUCCEEDED",
		3: "SEND_STATUS_FAILED",
		4: "SEND_STATUS_CANCELED",
	}
	SendStatus_value = map[string]int32{
		"SEND_STATUS_UNSPECIFIED": 0,
		"SEND_STATUS_PENDING":     1,
		"SEND_STATUS_SUCCEEDED":   2,
		"SEND_STATUS_FAILED":      3,
		"SEND_STATUS_CANCELED":    4,
	}
)

func (x SendStatus) Enum() *SendStatus {
	p := new(SendStatus)
	*p = x
	return p
}

func (x SendStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[1].Descriptor()
}

func (SendStatus) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[1]
}

func (x SendStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SendStatus.Descriptor instead.
func (SendStatus) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

// 错误代码枚举
type ErrorCode int32

const (
	// 未指定错误码
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// 无效参数
	ErrorCode_ERROR_CODE_INVALID_PARAMETER ErrorCode = 1
	// 频率限制
	ErrorCode_ERROR_CODE_RATE_LIMITED ErrorCode = 2
	// 模板未找到
	ErrorCode_ERROR_CODE_TEMPLATE_NOT_FOUND ErrorCode = 3
	// 渠道被禁用
	ErrorCode_ERROR_CODE_CHANNEL_DISABLED ErrorCode = 4
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0: "ERROR_CODE_UNSPECIFIED",
		1: "ERROR_CODE_INVALID_PARAMETER",
		2: "ERROR_CODE_RATE_LIMITED",
		3: "ERROR_CODE_TEMPLATE_NOT_FOUND",
		4: "ERROR_CODE_CHANNEL_DISABLED",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":        0,
		"ERROR_CODE_INVALID_PARAMETER":  1,
		"ERROR_CODE_RATE_LIMITED":       2,
		"ERROR_CODE_TEMPLATE_NOT_FOUND": 3,
		"ERROR_CODE_CHANNEL_DISABLED":   4,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_notification_v1_notification_proto_enumTypes[2].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_notification_v1_notification_proto_enumTypes[2]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

// 通知发送策略定义
type SendStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to StrategyType:
	//
	//	*SendStrategy_Immediate
	//	*SendStrategy_Delayed
	//	*SendStrategy_Scheduled
	//	*SendStrategy_TimeWindow
	StrategyType  isSendStrategy_StrategyType `protobuf_oneof:"strategy_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendStrategy) Reset() {
	*x = SendStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendStrategy) ProtoMessage() {}

func (x *SendStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendStrategy.ProtoReflect.Descriptor instead.
func (*SendStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *SendStrategy) GetStrategyType() isSendStrategy_StrategyType {
	if x != nil {
		return x.StrategyType
	}
	return nil
}

func (x *SendStrategy) GetImmediate() *ImmediateStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Immediate); ok {
			return x.Immediate
		}
	}
	return nil
}

func (x *SendStrategy) GetDelayed() *DelayedStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Delayed); ok {
			return x.Delayed
		}
	}
	return nil
}

func (x *SendStrategy) GetScheduled() *ScheduledStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_Scheduled); ok {
			return x.Scheduled
		}
	}
	return nil
}

func (x *SendStrategy) GetTimeWindow() *TimeWindowStrategy {
	if x != nil {
		if x, ok := x.StrategyType.(*SendStrategy_TimeWindow); ok {
			return x.TimeWindow
		}
	}
	return nil
}

type isSendStrategy_StrategyType interface {
	isSendStrategy_StrategyType()
}

type SendStrategy_Immediate struct {
	// 立即发送
	Immediate *ImmediateStrategy `protobuf:"bytes,1,opt,name=immediate,proto3,oneof"`
}

type SendStrategy_Delayed struct {
	// 延迟发送
	Delayed *DelayedStrategy `protobuf:"bytes,2,opt,name=delayed,proto3,oneof"`
}

type SendStrategy_Scheduled struct {
	// 定时发送
	Scheduled *ScheduledStrategy `protobuf:"bytes,3,opt,name=scheduled,proto3,oneof"`
}

type SendStrategy_TimeWindow struct {
	// 时间窗口内发送
	TimeWindow *TimeWindowStrategy `protobuf:"bytes,4,opt,name=time_window,json=timeWindow,proto3,oneof"`
}

func (*SendStrategy_Immediate) isSendStrategy_StrategyType() {}

func (*SendStrategy_Delayed) isSendStrategy_StrategyType() {}

func (*SendStrategy_Scheduled) isSendStrategy_StrategyType() {}

func (*SendStrategy_TimeWindow) isSendStrategy_StrategyType() {}

// 空结构表示立即发送
type ImmediateStrategy struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImmediateStrategy) Reset() {
	*x = ImmediateStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImmediateStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImmediateStrategy) ProtoMessage() {}

func (x *ImmediateStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImmediateStrategy.ProtoReflect.Descriptor instead.
func (*ImmediateStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

type DelayedStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 延迟秒数
	DelaySeconds  int64 `protobuf:"varint,1,opt,name=delay_seconds,json=delaySeconds,proto3" json:"delay_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelayedStrategy) Reset() {
	*x = DelayedStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelayedStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelayedStrategy) ProtoMessage() {}

func (x *DelayedStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelayedStrategy.ProtoReflect.Descriptor instead.
func (*DelayedStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *DelayedStrategy) GetDelaySeconds() int64 {
	if x != nil {
		return x.DelaySeconds
	}
	return 0
}

type ScheduledStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 具体发送时间
	SendTime      *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledStrategy) Reset() {
	*x = ScheduledStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledStrategy) ProtoMessage() {}

func (x *ScheduledStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledStrategy.ProtoReflect.Descriptor instead.
func (*ScheduledStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *ScheduledStrategy) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

type TimeWindowStrategy struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 开始时间
	StartTimeMilliseconds int64 `protobuf:"varint,1,opt,name=start_time_milliseconds,json=startTimeMilliseconds,proto3" json:"start_time_milliseconds,omitempty"`
	// 结束时间
	EndTimeMilliseconds int64 `protobuf:"varint,2,opt,name=end_time_milliseconds,json=endTimeMilliseconds,proto3" json:"end_time_milliseconds,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TimeWindowStrategy) Reset() {
	*x = TimeWindowStrategy{}
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeWindowStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeWindowStrategy) ProtoMessage() {}

func (x *TimeWindowStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeWindowStrategy.ProtoReflect.Descriptor instead.
func (*TimeWindowStrategy) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *TimeWindowStrategy) GetStartTimeMilliseconds() int64 {
	if x != nil {
		return x.StartTimeMilliseconds
	}
	return 0
}

func (x *TimeWindowStrategy) GetEndTimeMilliseconds() int64 {
	if x != nil {
		return x.EndTimeMilliseconds
	}
	return 0
}

// 回调请求
type HandleNotificationResultRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 通知平台内部的id
	NotificationId string `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// 原始请求
	OriginalRequest *SendNotificationRequest `protobuf:"bytes,2,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	// 发送结果
	Result        *SendNotificationResponse `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleNotificationResultRequest) Reset() {
	*x = HandleNotificationResultRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleNotificationResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleNotificationResultRequest) ProtoMessage() {}

func (x *HandleNotificationResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleNotificationResultRequest.ProtoReflect.Descriptor instead.
func (*HandleNotificationResultRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *HandleNotificationResultRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *HandleNotificationResultRequest) GetOriginalRequest() *SendNotificationRequest {
	if x != nil {
		return x.OriginalRequest
	}
	return nil
}

func (x *HandleNotificationResultRequest) GetResult() *SendNotificationResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

// 回调响应
type HandleNotificationResultResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 回调是否成功处理
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HandleNotificationResultResponse) Reset() {
	*x = HandleNotificationResultResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HandleNotificationResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleNotificationResultResponse) ProtoMessage() {}

func (x *HandleNotificationResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleNotificationResultResponse.ProtoReflect.Descriptor instead.
func (*HandleNotificationResultResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *HandleNotificationResultResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 同步单条发送通知请求
type SendNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求的唯一标识，主要用于去重
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 业务方ID
	BizId string `protobuf:"bytes,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 接收者标识(可以是用户ID、邮箱、手机号等)
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// int64 receiver = 3;              // 接收者 id
	// 发送渠道
	Channel Channel `protobuf:"varint,4,opt,name=channel,proto3,enum=notification.v1.Channel" json:"channel,omitempty"`
	// 模板ID
	TemplateId string `protobuf:"bytes,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// 模板参数
	TemplateParams map[string]string `protobuf:"bytes,6,rep,name=template_params,json=templateParams,proto3" json:"template_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 发送策略
	Strategy      *SendStrategy `protobuf:"bytes,7,opt,name=strategy,proto3" json:"strategy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationRequest) Reset() {
	*x = SendNotificationRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationRequest) ProtoMessage() {}

func (x *SendNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *SendNotificationRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SendNotificationRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *SendNotificationRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SendNotificationRequest) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_CHANNEL_UNSPECIFIED
}

func (x *SendNotificationRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SendNotificationRequest) GetTemplateParams() map[string]string {
	if x != nil {
		return x.TemplateParams
	}
	return nil
}

func (x *SendNotificationRequest) GetStrategy() *SendStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

// 同步单条发送通知响应
type SendNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求的唯一标识
	RequestKey string `protobuf:"bytes,1,opt,name=request_key,json=requestKey,proto3" json:"request_key,omitempty"`
	// 通知平台生成的消息ID
	NotificationId string `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	// 发送状态
	Status SendStatus `protobuf:"varint,3,opt,name=status,proto3,enum=notification.v1.SendStatus" json:"status,omitempty"`
	// 发送时间
	SendTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	// 失败时的错误代码
	ErrorCode ErrorCode `protobuf:"varint,5,opt,name=error_code,json=errorCode,proto3,enum=notification.v1.ErrorCode" json:"error_code,omitempty"`
	// 错误详情
	ErrorMessage  string `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendNotificationResponse) Reset() {
	*x = SendNotificationResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationResponse) ProtoMessage() {}

func (x *SendNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *SendNotificationResponse) GetRequestKey() string {
	if x != nil {
		return x.RequestKey
	}
	return ""
}

func (x *SendNotificationResponse) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *SendNotificationResponse) GetStatus() SendStatus {
	if x != nil {
		return x.Status
	}
	return SendStatus_SEND_STATUS_UNSPECIFIED
}

func (x *SendNotificationResponse) GetSendTime() *timestamppb.Timestamp {
	if x != nil {
		return x.SendTime
	}
	return nil
}

func (x *SendNotificationResponse) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *SendNotificationResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 异步单条发送通知请求
type SendNotificationAsyncRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求的唯一标识，主要用于去重
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 业务方ID
	BizId string `protobuf:"bytes,2,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 接收者标识(可以是用户ID、邮箱、手机号等)
	Receiver string `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	// int64 receiver = 3;              // 接收者 id
	// 发送渠道
	Channel Channel `protobuf:"varint,4,opt,name=channel,proto3,enum=notification.v1.Channel" json:"channel,omitempty"`
	// 模板ID
	TemplateId string `protobuf:"bytes,5,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	// 模板参数
	TemplateParams map[string]string `protobuf:"bytes,6,rep,name=template_params,json=templateParams,proto3" json:"template_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 发送策略
	Strategy *SendStrategy `protobuf:"bytes,7,opt,name=strategy,proto3" json:"strategy,omitempty"`
	// 可选回调地址
	CallbackEndpoint string `protobuf:"bytes,8,opt,name=callback_endpoint,json=callbackEndpoint,proto3" json:"callback_endpoint,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SendNotificationAsyncRequest) Reset() {
	*x = SendNotificationAsyncRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationAsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationAsyncRequest) ProtoMessage() {}

func (x *SendNotificationAsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationAsyncRequest.ProtoReflect.Descriptor instead.
func (*SendNotificationAsyncRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *SendNotificationAsyncRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SendNotificationAsyncRequest) GetBizId() string {
	if x != nil {
		return x.BizId
	}
	return ""
}

func (x *SendNotificationAsyncRequest) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *SendNotificationAsyncRequest) GetChannel() Channel {
	if x != nil {
		return x.Channel
	}
	return Channel_CHANNEL_UNSPECIFIED
}

func (x *SendNotificationAsyncRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *SendNotificationAsyncRequest) GetTemplateParams() map[string]string {
	if x != nil {
		return x.TemplateParams
	}
	return nil
}

func (x *SendNotificationAsyncRequest) GetStrategy() *SendStrategy {
	if x != nil {
		return x.Strategy
	}
	return nil
}

func (x *SendNotificationAsyncRequest) GetCallbackEndpoint() string {
	if x != nil {
		return x.CallbackEndpoint
	}
	return ""
}

// 异步单条发送通知响应
type SendNotificationAsyncResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 平台任务ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 结果过期时间
	ExpireTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	// 回调地址
	CallbackEndpoint *string `protobuf:"bytes,3,opt,name=callback_endpoint,json=callbackEndpoint,proto3,oneof" json:"callback_endpoint,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SendNotificationAsyncResponse) Reset() {
	*x = SendNotificationAsyncResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendNotificationAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendNotificationAsyncResponse) ProtoMessage() {}

func (x *SendNotificationAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendNotificationAsyncResponse.ProtoReflect.Descriptor instead.
func (*SendNotificationAsyncResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *SendNotificationAsyncResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *SendNotificationAsyncResponse) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *SendNotificationAsyncResponse) GetCallbackEndpoint() string {
	if x != nil && x.CallbackEndpoint != nil {
		return *x.CallbackEndpoint
	}
	return ""
}

// 同步批量发送通知请求
type BatchSendNotificationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 公共请求参数，这里的Key需要特殊处理
	BaseRequest *SendNotificationRequest `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	// 批量接收者列表
	Receivers     []string `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers,omitempty"` // repeated int64 receivers = 2;
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendNotificationsRequest) Reset() {
	*x = BatchSendNotificationsRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsRequest) ProtoMessage() {}

func (x *BatchSendNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsRequest.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{11}
}

func (x *BatchSendNotificationsRequest) GetBaseRequest() *SendNotificationRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *BatchSendNotificationsRequest) GetReceivers() []string {
	if x != nil {
		return x.Receivers
	}
	return nil
}

// 同步批量发送通知响应
type BatchSendNotificationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 所有结果
	Results []*SendNotificationResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// 总数
	TotalCount int32 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// 成功数
	SuccessCount  int32 `protobuf:"varint,3,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchSendNotificationsResponse) Reset() {
	*x = BatchSendNotificationsResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsResponse) ProtoMessage() {}

func (x *BatchSendNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsResponse.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{12}
}

func (x *BatchSendNotificationsResponse) GetResults() []*SendNotificationResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchSendNotificationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *BatchSendNotificationsResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

// 异步批量发送通知请求
type BatchSendNotificationsAsyncRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 公共请求参数
	BaseRequest *SendNotificationAsyncRequest `protobuf:"bytes,1,opt,name=base_request,json=baseRequest,proto3" json:"base_request,omitempty"`
	// 批量接收者列表
	Receivers []string `protobuf:"bytes,2,rep,name=receivers,proto3" json:"receivers,omitempty"`
	// repeated int64 receivers = 2;
	// 可选回调地址
	CallbackEndpoint string `protobuf:"bytes,3,opt,name=callback_endpoint,json=callbackEndpoint,proto3" json:"callback_endpoint,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchSendNotificationsAsyncRequest) Reset() {
	*x = BatchSendNotificationsAsyncRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsAsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsAsyncRequest) ProtoMessage() {}

func (x *BatchSendNotificationsAsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsAsyncRequest.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsAsyncRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{13}
}

func (x *BatchSendNotificationsAsyncRequest) GetBaseRequest() *SendNotificationAsyncRequest {
	if x != nil {
		return x.BaseRequest
	}
	return nil
}

func (x *BatchSendNotificationsAsyncRequest) GetReceivers() []string {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *BatchSendNotificationsAsyncRequest) GetCallbackEndpoint() string {
	if x != nil {
		return x.CallbackEndpoint
	}
	return ""
}

// 异步批量发送通知响应
type BatchSendNotificationsAsyncResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 平台任务ID
	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// 结果过期时间
	ExpireTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	// 回调地址
	CallbackEndpoint string `protobuf:"bytes,3,opt,name=callback_endpoint,json=callbackEndpoint,proto3" json:"callback_endpoint,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BatchSendNotificationsAsyncResponse) Reset() {
	*x = BatchSendNotificationsAsyncResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchSendNotificationsAsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSendNotificationsAsyncResponse) ProtoMessage() {}

func (x *BatchSendNotificationsAsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSendNotificationsAsyncResponse.ProtoReflect.Descriptor instead.
func (*BatchSendNotificationsAsyncResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{14}
}

func (x *BatchSendNotificationsAsyncResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *BatchSendNotificationsAsyncResponse) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *BatchSendNotificationsAsyncResponse) GetCallbackEndpoint() string {
	if x != nil {
		return x.CallbackEndpoint
	}
	return ""
}

// 查询请求
type QueryNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求唯一标识
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// 平台任务ID
	TaskId        string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryNotificationRequest) Reset() {
	*x = QueryNotificationRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotificationRequest) ProtoMessage() {}

func (x *QueryNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotificationRequest.ProtoReflect.Descriptor instead.
func (*QueryNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{15}
}

func (x *QueryNotificationRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *QueryNotificationRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

// 查询响应
type QueryNotificationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to OriginalRequest:
	//
	//	*QueryNotificationResponse_Single
	//	*QueryNotificationResponse_Batch
	OriginalRequest isQueryNotificationResponse_OriginalRequest `protobuf_oneof:"original_request"`
	Results         []*SendNotificationResponse                 `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *QueryNotificationResponse) Reset() {
	*x = QueryNotificationResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryNotificationResponse) ProtoMessage() {}

func (x *QueryNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryNotificationResponse.ProtoReflect.Descriptor instead.
func (*QueryNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{16}
}

func (x *QueryNotificationResponse) GetOriginalRequest() isQueryNotificationResponse_OriginalRequest {
	if x != nil {
		return x.OriginalRequest
	}
	return nil
}

func (x *QueryNotificationResponse) GetSingle() *SendNotificationAsyncRequest {
	if x != nil {
		if x, ok := x.OriginalRequest.(*QueryNotificationResponse_Single); ok {
			return x.Single
		}
	}
	return nil
}

func (x *QueryNotificationResponse) GetBatch() *BatchSendNotificationsAsyncRequest {
	if x != nil {
		if x, ok := x.OriginalRequest.(*QueryNotificationResponse_Batch); ok {
			return x.Batch
		}
	}
	return nil
}

func (x *QueryNotificationResponse) GetResults() []*SendNotificationResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type isQueryNotificationResponse_OriginalRequest interface {
	isQueryNotificationResponse_OriginalRequest()
}

type QueryNotificationResponse_Single struct {
	// 立即发送
	Single *SendNotificationAsyncRequest `protobuf:"bytes,1,opt,name=single,proto3,oneof"`
}

type QueryNotificationResponse_Batch struct {
	// 延迟发送
	Batch *BatchSendNotificationsAsyncRequest `protobuf:"bytes,2,opt,name=batch,proto3,oneof"`
}

func (*QueryNotificationResponse_Single) isQueryNotificationResponse_OriginalRequest() {}

func (*QueryNotificationResponse_Batch) isQueryNotificationResponse_OriginalRequest() {}

var File_notification_v1_notification_proto protoreflect.FileDescriptor

const file_notification_v1_notification_proto_rawDesc = "" +
	"\n" +
	"\"notification/v1/notification.proto\x12\x0fnotification.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xad\x02\n" +
	"\fSendStrategy\x12B\n" +
	"\timmediate\x18\x01 \x01(\v2\".notification.v1.ImmediateStrategyH\x00R\timmediate\x12<\n" +
	"\adelayed\x18\x02 \x01(\v2 .notification.v1.DelayedStrategyH\x00R\adelayed\x12B\n" +
	"\tscheduled\x18\x03 \x01(\v2\".notification.v1.ScheduledStrategyH\x00R\tscheduled\x12F\n" +
	"\vtime_window\x18\x04 \x01(\v2#.notification.v1.TimeWindowStrategyH\x00R\n" +
	"timeWindowB\x0f\n" +
	"\rstrategy_type\"\x13\n" +
	"\x11ImmediateStrategy\"6\n" +
	"\x0fDelayedStrategy\x12#\n" +
	"\rdelay_seconds\x18\x01 \x01(\x03R\fdelaySeconds\"L\n" +
	"\x11ScheduledStrategy\x127\n" +
	"\tsend_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\bsendTime\"\x80\x01\n" +
	"\x12TimeWindowStrategy\x126\n" +
	"\x17start_time_milliseconds\x18\x01 \x01(\x03R\x15startTimeMilliseconds\x122\n" +
	"\x15end_time_milliseconds\x18\x02 \x01(\x03R\x13endTimeMilliseconds\"\xe2\x01\n" +
	"\x1fHandleNotificationResultRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12S\n" +
	"\x10original_request\x18\x02 \x01(\v2(.notification.v1.SendNotificationRequestR\x0foriginalRequest\x12A\n" +
	"\x06result\x18\x03 \x01(\v2).notification.v1.SendNotificationResponseR\x06result\"<\n" +
	" HandleNotificationResultResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x98\x03\n" +
	"\x17SendNotificationRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\tR\x05bizId\x12\x1a\n" +
	"\breceiver\x18\x03 \x01(\tR\breceiver\x122\n" +
	"\achannel\x18\x04 \x01(\x0e2\x18.notification.v1.ChannelR\achannel\x12\x1f\n" +
	"\vtemplate_id\x18\x05 \x01(\tR\n" +
	"templateId\x12e\n" +
	"\x0ftemplate_params\x18\x06 \x03(\v2<.notification.v1.SendNotificationRequest.TemplateParamsEntryR\x0etemplateParams\x129\n" +
	"\bstrategy\x18\a \x01(\v2\x1d.notification.v1.SendStrategyR\bstrategy\x1aA\n" +
	"\x13TemplateParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb2\x02\n" +
	"\x18SendNotificationResponse\x12\x1f\n" +
	"\vrequest_key\x18\x01 \x01(\tR\n" +
	"requestKey\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\x123\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1b.notification.v1.SendStatusR\x06status\x127\n" +
	"\tsend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\bsendTime\x129\n" +
	"\n" +
	"error_code\x18\x05 \x01(\x0e2\x1a.notification.v1.ErrorCodeR\terrorCode\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\xcf\x03\n" +
	"\x1cSendNotificationAsyncRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x15\n" +
	"\x06biz_id\x18\x02 \x01(\tR\x05bizId\x12\x1a\n" +
	"\breceiver\x18\x03 \x01(\tR\breceiver\x122\n" +
	"\achannel\x18\x04 \x01(\x0e2\x18.notification.v1.ChannelR\achannel\x12\x1f\n" +
	"\vtemplate_id\x18\x05 \x01(\tR\n" +
	"templateId\x12j\n" +
	"\x0ftemplate_params\x18\x06 \x03(\v2A.notification.v1.SendNotificationAsyncRequest.TemplateParamsEntryR\x0etemplateParams\x129\n" +
	"\bstrategy\x18\a \x01(\v2\x1d.notification.v1.SendStrategyR\bstrategy\x12+\n" +
	"\x11callback_endpoint\x18\b \x01(\tR\x10callbackEndpoint\x1aA\n" +
	"\x13TemplateParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x01\n" +
	"\x1dSendNotificationAsyncResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12;\n" +
	"\vexpire_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expireTime\x120\n" +
	"\x11callback_endpoint\x18\x03 \x01(\tH\x00R\x10callbackEndpoint\x88\x01\x01B\x14\n" +
	"\x12_callback_endpoint\"\x8a\x01\n" +
	"\x1dBatchSendNotificationsRequest\x12K\n" +
	"\fbase_request\x18\x01 \x01(\v2(.notification.v1.SendNotificationRequestR\vbaseRequest\x12\x1c\n" +
	"\treceivers\x18\x02 \x03(\tR\treceivers\"\xab\x01\n" +
	"\x1eBatchSendNotificationsResponse\x12C\n" +
	"\aresults\x18\x01 \x03(\v2).notification.v1.SendNotificationResponseR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12#\n" +
	"\rsuccess_count\x18\x03 \x01(\x05R\fsuccessCount\"\xc1\x01\n" +
	"\"BatchSendNotificationsAsyncRequest\x12P\n" +
	"\fbase_request\x18\x01 \x01(\v2-.notification.v1.SendNotificationAsyncRequestR\vbaseRequest\x12\x1c\n" +
	"\treceivers\x18\x02 \x03(\tR\treceivers\x12+\n" +
	"\x11callback_endpoint\x18\x03 \x01(\tR\x10callbackEndpoint\"\xa8\x01\n" +
	"#BatchSendNotificationsAsyncResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12;\n" +
	"\vexpire_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expireTime\x12+\n" +
	"\x11callback_endpoint\x18\x03 \x01(\tR\x10callbackEndpoint\"E\n" +
	"\x18QueryNotificationRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\"\x8a\x02\n" +
	"\x19QueryNotificationResponse\x12G\n" +
	"\x06single\x18\x01 \x01(\v2-.notification.v1.SendNotificationAsyncRequestH\x00R\x06single\x12K\n" +
	"\x05batch\x18\x02 \x01(\v23.notification.v1.BatchSendNotificationsAsyncRequestH\x00R\x05batch\x12C\n" +
	"\aresults\x18\x03 \x03(\v2).notification.v1.SendNotificationResponseR\aresultsB\x12\n" +
	"\x10original_request*\xae\x01\n" +
	"\aChannel\x12\x17\n" +
	"\x13CHANNEL_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vCHANNEL_SMS\x10\x01\x12\x11\n" +
	"\rCHANNEL_EMAIL\x10\x02\x12\x12\n" +
	"\x0eCHANNEL_IN_APP\x10\x03\x12\x1b\n" +
	"\x17CHANNEL_WECHAT_OFFICIAL\x10\x04\x12\x1a\n" +
	"\x16CHANNEL_WECHAT_SERVICE\x10\x05\x12\x19\n" +
	"\x15CHANNEL_ENTERPRISE_IM\x10\x06*\x8f\x01\n" +
	"\n" +
	"SendStatus\x12\x1b\n" +
	"\x17SEND_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13SEND_STATUS_PENDING\x10\x01\x12\x19\n" +
	"\x15SEND_STATUS_SUCCEEDED\x10\x02\x12\x16\n" +
	"\x12SEND_STATUS_FAILED\x10\x03\x12\x18\n" +
	"\x14SEND_STATUS_CANCELED\x10\x04*\xaa\x01\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12 \n" +
	"\x1cERROR_CODE_INVALID_PARAMETER\x10\x01\x12\x1b\n" +
	"\x17ERROR_CODE_RATE_LIMITED\x10\x02\x12!\n" +
	"\x1dERROR_CODE_TEMPLATE_NOT_FOUND\x10\x03\x12\x1f\n" +
	"\x1bERROR_CODE_CHANNEL_DISABLED\x10\x042\x92\x01\n" +
	"\x0fCallbackService\x12\x7f\n" +
	"\x18HandleNotificationResult\x120.notification.v1.HandleNotificationResultRequest\x1a1.notification.v1.HandleNotificationResultResponse2\xe8\x04\n" +
	"\x13NotificationService\x12g\n" +
	"\x10SendNotification\x12(.notification.v1.SendNotificationRequest\x1a).notification.v1.SendNotificationResponse\x12v\n" +
	"\x15SendNotificationAsync\x12-.notification.v1.SendNotificationAsyncRequest\x1a..notification.v1.SendNotificationAsyncResponse\x12y\n" +
	"\x16BatchSendNotifications\x12..notification.v1.BatchSendNotificationsRequest\x1a/.notification.v1.BatchSendNotificationsResponse\x12\x88\x01\n" +
	"\x1bBatchSendNotificationsAsync\x123.notification.v1.BatchSendNotificationsAsyncRequest\x1a4.notification.v1.BatchSendNotificationsAsyncResponse\x12j\n" +
	"\x11QueryNotification\x12).notification.v1.QueryNotificationRequest\x1a*.notification.v1.QueryNotificationResponseB\xe0\x01\n" +
	"\x13com.notification.v1B\x11NotificationProtoP\x01ZYgithub.com/chuangmao11/notification_platform/api/proto/gen/notification/v1;notificationv1\xa2\x02\x03NXX\xaa\x02\x0fNotification.V1\xca\x02\x0fNotification\\V1\xe2\x02\x1bNotification\\V1\\GPBMetadata\xea\x02\x10Notification::V1b\x06proto3"

var (
	file_notification_v1_notification_proto_rawDescOnce sync.Once
	file_notification_v1_notification_proto_rawDescData []byte
)

func file_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)))
	})
	return file_notification_v1_notification_proto_rawDescData
}

var file_notification_v1_notification_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_notification_v1_notification_proto_goTypes = []any{
	(Channel)(0),                                // 0: notification.v1.Channel
	(SendStatus)(0),                             // 1: notification.v1.SendStatus
	(ErrorCode)(0),                              // 2: notification.v1.ErrorCode
	(*SendStrategy)(nil),                        // 3: notification.v1.SendStrategy
	(*ImmediateStrategy)(nil),                   // 4: notification.v1.ImmediateStrategy
	(*DelayedStrategy)(nil),                     // 5: notification.v1.DelayedStrategy
	(*ScheduledStrategy)(nil),                   // 6: notification.v1.ScheduledStrategy
	(*TimeWindowStrategy)(nil),                  // 7: notification.v1.TimeWindowStrategy
	(*HandleNotificationResultRequest)(nil),     // 8: notification.v1.HandleNotificationResultRequest
	(*HandleNotificationResultResponse)(nil),    // 9: notification.v1.HandleNotificationResultResponse
	(*SendNotificationRequest)(nil),             // 10: notification.v1.SendNotificationRequest
	(*SendNotificationResponse)(nil),            // 11: notification.v1.SendNotificationResponse
	(*SendNotificationAsyncRequest)(nil),        // 12: notification.v1.SendNotificationAsyncRequest
	(*SendNotificationAsyncResponse)(nil),       // 13: notification.v1.SendNotificationAsyncResponse
	(*BatchSendNotificationsRequest)(nil),       // 14: notification.v1.BatchSendNotificationsRequest
	(*BatchSendNotificationsResponse)(nil),      // 15: notification.v1.BatchSendNotificationsResponse
	(*BatchSendNotificationsAsyncRequest)(nil),  // 16: notification.v1.BatchSendNotificationsAsyncRequest
	(*BatchSendNotificationsAsyncResponse)(nil), // 17: notification.v1.BatchSendNotificationsAsyncResponse
	(*QueryNotificationRequest)(nil),            // 18: notification.v1.QueryNotificationRequest
	(*QueryNotificationResponse)(nil),           // 19: notification.v1.QueryNotificationResponse
	nil,                                         // 20: notification.v1.SendNotificationRequest.TemplateParamsEntry
	nil,                                         // 21: notification.v1.SendNotificationAsyncRequest.TemplateParamsEntry
	(*timestamppb.Timestamp)(nil),               // 22: google.protobuf.Timestamp
}
var file_notification_v1_notification_proto_depIdxs = []int32{
	4,  // 0: notification.v1.SendStrategy.immediate:type_name -> notification.v1.ImmediateStrategy
	5,  // 1: notification.v1.SendStrategy.delayed:type_name -> notification.v1.DelayedStrategy
	6,  // 2: notification.v1.SendStrategy.scheduled:type_name -> notification.v1.ScheduledStrategy
	7,  // 3: notification.v1.SendStrategy.time_window:type_name -> notification.v1.TimeWindowStrategy
	22, // 4: notification.v1.ScheduledStrategy.send_time:type_name -> google.protobuf.Timestamp
	10, // 5: notification.v1.HandleNotificationResultRequest.original_request:type_name -> notification.v1.SendNotificationRequest
	11, // 6: notification.v1.HandleNotificationResultRequest.result:type_name -> notification.v1.SendNotificationResponse
	0,  // 7: notification.v1.SendNotificationRequest.channel:type_name -> notification.v1.Channel
	20, // 8: notification.v1.SendNotificationRequest.template_params:type_name -> notification.v1.SendNotificationRequest.TemplateParamsEntry
	3,  // 9: notification.v1.SendNotificationRequest.strategy:type_name -> notification.v1.SendStrategy
	1,  // 10: notification.v1.SendNotificationResponse.status:type_name -> notification.v1.SendStatus
	22, // 11: notification.v1.SendNotificationResponse.send_time:type_name -> google.protobuf.Timestamp
	2,  // 12: notification.v1.SendNotificationResponse.error_code:type_name -> notification.v1.ErrorCode
	0,  // 13: notification.v1.SendNotificationAsyncRequest.channel:type_name -> notification.v1.Channel
	21, // 14: notification.v1.SendNotificationAsyncRequest.template_params:type_name -> notification.v1.SendNotificationAsyncRequest.TemplateParamsEntry
	3,  // 15: notification.v1.SendNotificationAsyncRequest.strategy:type_name -> notification.v1.SendStrategy
	22, // 16: notification.v1.SendNotificationAsyncResponse.expire_time:type_name -> google.protobuf.Timestamp
	10, // 17: notification.v1.BatchSendNotificationsRequest.base_request:type_name -> notification.v1.SendNotificationRequest
	11, // 18: notification.v1.BatchSendNotificationsResponse.results:type_name -> notification.v1.SendNotificationResponse
	12, // 19: notification.v1.BatchSendNotificationsAsyncRequest.base_request:type_name -> notification.v1.SendNotificationAsyncRequest
	22, // 20: notification.v1.BatchSendNotificationsAsyncResponse.expire_time:type_name -> google.protobuf.Timestamp
	12, // 21: notification.v1.QueryNotificationResponse.single:type_name -> notification.v1.SendNotificationAsyncRequest
	16, // 22: notification.v1.QueryNotificationResponse.batch:type_name -> notification.v1.BatchSendNotificationsAsyncRequest
	11, // 23: notification.v1.QueryNotificationResponse.results:type_name -> notification.v1.SendNotificationResponse
	8,  // 24: notification.v1.CallbackService.HandleNotificationResult:input_type -> notification.v1.HandleNotificationResultRequest
	10, // 25: notification.v1.NotificationService.SendNotification:input_type -> notification.v1.SendNotificationRequest
	12, // 26: notification.v1.NotificationService.SendNotificationAsync:input_type -> notification.v1.SendNotificationAsyncRequest
	14, // 27: notification.v1.NotificationService.BatchSendNotifications:input_type -> notification.v1.BatchSendNotificationsRequest
	16, // 28: notification.v1.NotificationService.BatchSendNotificationsAsync:input_type -> notification.v1.BatchSendNotificationsAsyncRequest
	18, // 29: notification.v1.NotificationService.QueryNotification:input_type -> notification.v1.QueryNotificationRequest
	9,  // 30: notification.v1.CallbackService.HandleNotificationResult:output_type -> notification.v1.HandleNotificationResultResponse
	11, // 31: notification.v1.NotificationService.SendNotification:output_type -> notification.v1.SendNotificationResponse
	13, // 32: notification.v1.NotificationService.SendNotificationAsync:output_type -> notification.v1.SendNotificationAsyncResponse
	15, // 33: notification.v1.NotificationService.BatchSendNotifications:output_type -> notification.v1.BatchSendNotificationsResponse
	17, // 34: notification.v1.NotificationService.BatchSendNotificationsAsync:output_type -> notification.v1.BatchSendNotificationsAsyncResponse
	19, // 35: notification.v1.NotificationService.QueryNotification:output_type -> notification.v1.QueryNotificationResponse
	30, // [30:36] is the sub-list for method output_type
	24, // [24:30] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_notification_v1_notification_proto_init() }
func file_notification_v1_notification_proto_init() {
	if File_notification_v1_notification_proto != nil {
		return
	}
	file_notification_v1_notification_proto_msgTypes[0].OneofWrappers = []any{
		(*SendStrategy_Immediate)(nil),
		(*SendStrategy_Delayed)(nil),
		(*SendStrategy_Scheduled)(nil),
		(*SendStrategy_TimeWindow)(nil),
	}
	file_notification_v1_notification_proto_msgTypes[10].OneofWrappers = []any{}
	file_notification_v1_notification_proto_msgTypes[16].OneofWrappers = []any{
		(*QueryNotificationResponse_Single)(nil),
		(*QueryNotificationResponse_Batch)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_notification_v1_notification_proto_depIdxs,
		EnumInfos:         file_notification_v1_notification_proto_enumTypes,
		MessageInfos:      file_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_notification_v1_notification_proto = out.File
	file_notification_v1_notification_proto_goTypes = nil
	file_notification_v1_notification_proto_depIdxs = nil
}
